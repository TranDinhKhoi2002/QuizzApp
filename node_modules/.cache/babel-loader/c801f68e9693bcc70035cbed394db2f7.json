{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_ReactJS\\\\QuizzApp\\\\src\\\\pages\\\\Question.jsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport useAxios from \"../hooks/Axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = () => {\n  _s();\n\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    question_category,\n    question_difficulty,\n    question_type,\n    amount_of_question,\n    score\n  } = useSelector(state => state);\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\n\n  if (question_category) {\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\n  }\n\n  if (question_difficulty) {\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\n  }\n\n  if (question_type) {\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\n  }\n\n  const {\n    response,\n    loading,\n    error\n  } = useAxios({\n    url: apiUrl\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [\"Question \", questionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"mJS4nv5f+QbtppL/44drO8skkP0=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useAxios];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["D:/Project_ReactJS/QuizzApp/src/pages/Question.jsx"],"names":["Typography","Box","useState","useDispatch","useSelector","useHistory","useAxios","Question","questionIndex","setQuestionIndex","options","setOptions","dispatch","history","question_category","question_difficulty","question_type","amount_of_question","score","state","apiUrl","concat","response","loading","error","url"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,GAAT,QAAoB,aAApB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAM;AACJS,IAAAA,iBADI;AAEJC,IAAAA,mBAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA;AALI,MAMFd,WAAW,CAAEe,KAAD,IAAWA,KAAZ,CANf;AAQA,MAAIC,MAAM,GAAI,mBAAkBH,kBAAmB,EAAnD;;AAEA,MAAIH,iBAAJ,EAAuB;AACrBM,IAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAe,aAAYP,iBAAkB,EAA7C,CAAT;AACD;;AAED,MAAIC,mBAAJ,EAAyB;AACvBK,IAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAe,eAAcN,mBAAoB,EAAjD,CAAT;AACD;;AAED,MAAIC,aAAJ,EAAmB;AACjBI,IAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAe,SAAQL,aAAc,EAArC,CAAT;AACD;;AAED,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA+BlB,QAAQ,CAAC;AAAEmB,IAAAA,GAAG,EAAEL;AAAP,GAAD,CAA7C;AAEA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,8BAAmCZ,aAAa,GAAG,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCD;;GAAMD,Q;UAIaJ,W,EACDE,U,EAQZD,W,EAgBiCE,Q;;;KA7BjCC,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useAxios from \"../hooks/Axios\";\r\n\r\nconst Question = () => {\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    question_category,\r\n    question_difficulty,\r\n    question_type,\r\n    amount_of_question,\r\n    score,\r\n  } = useSelector((state) => state);\r\n\r\n  let apiUrl = `/api.php?amount=${amount_of_question}`;\r\n\r\n  if (question_category) {\r\n    apiUrl = apiUrl.concat(`&category=${question_category}`);\r\n  }\r\n\r\n  if (question_difficulty) {\r\n    apiUrl = apiUrl.concat(`&difficulty=${question_difficulty}`);\r\n  }\r\n\r\n  if (question_type) {\r\n    apiUrl = apiUrl.concat(`&type=${question_type}`);\r\n  }\r\n\r\n  const { response, loading, error } = useAxios({ url: apiUrl });\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\">Question {questionIndex + 1}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}